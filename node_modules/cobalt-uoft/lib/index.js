'use strict';

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _mongoose = require('mongoose');

var _mongoose2 = _interopRequireDefault(_mongoose);

var _winston = require('winston');

var _winston2 = _interopRequireDefault(_winston);

var _db = require('./db');

var _db2 = _interopRequireDefault(_db);

var _athletics = require('./api/athletics');

var _athletics2 = _interopRequireDefault(_athletics);

var _buildings = require('./api/buildings');

var _buildings2 = _interopRequireDefault(_buildings);

var _courses = require('./api/courses');

var _courses2 = _interopRequireDefault(_courses);

var _exams = require('./api/exams');

var _exams2 = _interopRequireDefault(_exams);

var _food = require('./api/food');

var _food2 = _interopRequireDefault(_food);

var _textbooks = require('./api/textbooks');

var _textbooks2 = _interopRequireDefault(_textbooks);

var _transportation = require('./api/transportation');

var _transportation2 = _interopRequireDefault(_transportation);

var _cdf = require('./api/cdf');

var _cdf2 = _interopRequireDefault(_cdf);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var test = process.argv.join().match('/ava/');
var enableSync = process.env.COBALT_ENABLE_DB_SYNC || 'true';

// Database connection setup
_mongoose2.default.Promise = global.Promise;
_mongoose2.default.connect(process.env.COBALT_MONGO_URI || 'mongodb://localhost/cobalt', function (err) {
  if (err) throw new Error('Failed to connect to MongoDB [' + process.env.COBALT_MONGO_URI + ']: ' + err.message);
  if (!test) {
    _winston2.default.info('Connected to MongoDB');
  }
});

// Express setup
var app = (0, _express2.default)();

// Database sync keeper
if (!test && enableSync == 'true') {
  _db2.default.syncCron();
}

// API routes
var apiVersion = '1.0';
app.use('/' + apiVersion + '/athletics', _athletics2.default);
app.use('/' + apiVersion + '/buildings', _buildings2.default);
app.use('/' + apiVersion + '/courses', _courses2.default);
app.use('/' + apiVersion + '/exams', _exams2.default);
app.use('/' + apiVersion + '/food', _food2.default);
app.use('/' + apiVersion + '/textbooks', _textbooks2.default);
app.use('/' + apiVersion + '/transportation', _transportation2.default);
app.use('/' + apiVersion + '/cdf', _cdf2.default);

// Error handlers
app.use(function (req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

app.use(function (err, req, res, next) {
  err.status = err.status || 500;
  res.status(err.status);
  var error = {
    code: err.status,
    message: err.message
  };
  res.json({
    error: error
  });
});

module.exports = {
  Server: app
};